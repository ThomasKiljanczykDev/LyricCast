name: Deploy infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: 'Environment'
        options:
          - 'production'
          - 'development'
env:
  NODE_VERSION: '22'
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
  AWS_REGION: ${{ vars.AWS_REGION }}

permissions:
  id-token: write
  contents: read

jobs:
  cdk-bootstrap:
    name: Bootstrap CDK
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    defaults:
      run:
        working-directory: js/iac
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'
          cache-dependency-path: 'js/yarn.lock'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Install CDK
        run: yarn

      - name: CDK Bootstrap
        run: yarn cdk bootstrap
        env:
          DEPLOYMENT_ENVIRONMENT: ${{ inputs.environment }}

  cdk-deploy-certificates:
    name: Deploy certificates stack
    needs:
      - cdk-bootstrap
    uses: ./.github/workflows/cdk-deploy.yml
    with:
      environment: ${{ inputs.environment }}
      stack_name: 'certificates-${{ inputs.environment }}'

  cdk-deploy-app:
    name: Deploy app stack
    needs:
      - cdk-deploy-certificates
    uses: ./.github/workflows/cdk-deploy.yml
    with:
      environment: ${{ inputs.environment }}
      stack_name: 'lyriccast-receiver-${{ inputs.environment }}'